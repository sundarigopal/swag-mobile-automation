name: Android UI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Dependencies
        run: npm ci

      - name: Download Sample App APK
        run: |
          mkdir -p apps
          curl -L -o apps/Android.SauceLabs.Mobile.Sample.app.2.7.1.apk \
            https://github.com/saucelabs/sample-app-mobile/releases/download/v2.7.1/Android.SauceLabs.Mobile.Sample.app.2.7.1.apk

      - name: Install Appium and Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev
          npm install -g appium
          npm install -g adbkit
          appium -v

      - name: Launch Emulator and Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: google_apis_playstore
          arch: x86_64
          profile: pixel_4
          emulator-options: -no-window -no-audio -no-snapshot
          disable-animations: true
          script: |
            echo "Waiting for emulator to boot..."
            adb start-server
            adb wait-for-device

            # Ensure emulator-5554 is visible and not offline
            retry=0
            while [ $retry -lt 10 ]; do
              status=$(adb devices | grep emulator-5554 | awk '{print $2}')
              if [ "$status" == "device" ]; then
                echo "Device is online"
                break
              else
                echo "Device status: $status (retry $retry)"
                sleep 5
                retry=$((retry+1))
              fi
            done

            if [ "$status" != "device" ]; then
              echo "Emulator stuck offline"
              adb kill-server
              exit 1
            fi

            # Wait for system boot
            boot_completed=""
            retry=0
            while [ "$boot_completed" != "1" ] && [ $retry -lt 30 ]; do
              boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\r')
              echo "Boot status: $boot_completed"
              sleep 5
              retry=$((retry+1))
            done

            if [ "$boot_completed" != "1" ]; then
              echo "Emulator failed to boot in time"
              exit 1
            fi

            echo "Emulator booted successfully"

            echo "Starting Appium..."
            nohup appium > appium.log 2>&1 &
            sleep 10

            adb devices
            npx wdio run wdio.conf.js
      

      - name: Upload Failure Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failure-screenshots
          path: reports/screenshots/
